security:
    providers:
        in_memory:
            memory:
              users:
                admin: { password: %admin_password%, roles: 'ROLE_SUPER_ADMIN'}

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt|error)|css|images|js)/
            security: false

        secured_area:
            pattern:  ^/
            anonymous: ~
            form_login:
                login_path:  /login
                check_path:  /login_check
            logout:
                path:   /logout
                target: /

    role_hierarchy:
            ROLE_SONATA_FOO_ADMIN:
                - ROLE_SONATA_ADMIN_DEMO_FOO_DELETE
                - ROLE_SONATA_ADMIN_DEMO_FOO_EXPORT
                - ROLE_SONATA_ADMIN_DEMO_FOO_CREATE
                - ROLE_SONATA_ADMIN_DEMO_FOO_EDIT
                - ROLE_SONATA_ADMIN_DEMO_FOO_LIST
                - ROLE_SONATA_ADMIN_DEMO_FOO_VIEW

            # those are the roles I will use (less verbose)
            ROLE_SUPER_ADMIN: [ROLE_SONATA_FOO_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    access_control:
            - { path: %admin_domain%/login, roles: IS_AUTHENTICATED_ANONYMOUSLY}
            - { path: %admin_domain%/, roles: ROLE_SUPER_ADMIN }

    encoders:
          Symfony\Component\Security\Core\User\User: plaintext